#!/usr/bin/env python3

import sys
import math
import random

def is_prime(n, k=5):
    # Miller-Rabin primality test
    if n == 2 or n == 3:
        return True
    if n % 2 == 0 or n == 1:
        return False

    # Write n as 2^r * d + 1
    r, d = 0, n - 1
    while d % 2 == 0:
        r += 1
        d //= 2

    # Witness loop
    for _ in range(k):
        a = random.randint(2, n - 2)
        x = pow(a, d, n)
        if x == 1 or x == n - 1:
            continue
        for _ in range(r - 1):
            x = pow(x, 2, n)
            if x == n - 1:
                break
        else:
            return False
    return True

def find_prime_factor(n):
    # Find a prime factor using Miller-Rabin test
    if n % 2 == 0:
        return 2
    for i in range(3, min(int(math.sqrt(n)) + 1, n), 2):
        if n % i == 0 and is_prime(i):
            return i
    return n

def factorize_rsa_number(n):
    # Factorize RSA number into two prime numbers
    p = find_prime_factor(n)
    q = n // p
    return p, q

def main():
    if len(sys.argv) != 2:
        print("Usage: {} <file>".format(sys.argv[0]))
        sys.exit(1)

    filename = sys.argv[1]

    try:
        with open(filename, 'r') as file:
            for line in file:
                rsa_number = int(line.strip())
                p, q = factorize_rsa_number(rsa_number)
                print("{}={}*{}".format(rsa_number, p, q))
    except FileNotFoundError:
        print("Error: File '{}' not found.".format(filename))
        sys.exit(1)
    except ValueError:
        print("Error: Invalid number in the file.")
        sys.exit(1)

if __name__ == "__main__":
    main()
